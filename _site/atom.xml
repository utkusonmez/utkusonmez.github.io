<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Utku Sönmez</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <id>http://localhost:4000</id>
 <updated>2017-05-06T12:15:17+03:00</updated>
 <author>
   <name>Utku Sönmez</name>
   <uri>http://www.utkusonmez.com/</uri>
   <email>utkusnmz@gmail.com</email>
 </author>

 

 <entry>
   <title>Nginx downloads page configuration</title>
   <link href="http://localhost:4000/nginx-downloads-page-configuration"/>
   <id>http://localhost:4000/nginx-downloads-page-configuration</id>
   <updated>2017-05-06T00:00:00+03:00</updated>
   <content type="html">&lt;p&gt;This blog is about how to configure a downloads page for static files and how to force for download&lt;/p&gt; &lt;h3 id=&quot;configure-nginx-config-file&quot;&gt;Configure Nginx config file&lt;/h3&gt; &lt;p&gt;Nginx config file located under ‘/etc/nginx’ and you can check this link for full example of nginx configuration file. &lt;a href=&quot;https://www.nginx.com/resources/wiki/start/topics/examples/full/&quot;&gt;Full example of nginx config file&lt;/a&gt;&lt;/p&gt;...</content>
 </entry>

 

 <entry>
   <title>Invalid number of arguments in root error</title>
   <link href="http://localhost:4000/invalid-number-of-arguments-in-root-error"/>
   <id>http://localhost:4000/invalid-number-of-arguments-in-root-error</id>
   <updated>2017-05-05T00:00:00+03:00</updated>
   <content type="html">&lt;p&gt;If you get “invalid number of arguments in “root” directive in /etc/nginx/nginx.conf” error after you modify your nginx.conf file, you may forget a simple ‘;’.&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo tail -100f /var/log/nginx/error.log 2017/05/06 08:57:35 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;emerg] 14757#14757: invalid number of arguments &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;root&quot;&lt;/span&gt; directive &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;...</content>
 </entry>

 

 <entry>
   <title>Serve static content on Nginx</title>
   <link href="http://localhost:4000/serve-static-content-on-nginx"/>
   <id>http://localhost:4000/serve-static-content-on-nginx</id>
   <updated>2017-05-01T00:00:00+03:00</updated>
   <content type="html">&lt;p&gt;This blog is about serving static content on Nginx.&lt;/p&gt; &lt;h3 id=&quot;configure-nginx-config-file&quot;&gt;Configure Nginx config file&lt;/h3&gt; &lt;p&gt;Nginx config file located under ‘/etc/nginx’ and you can check this link for full example of nginx configuration file. &lt;a href=&quot;https://www.nginx.com/resources/wiki/start/topics/examples/full/&quot;&gt;Full example of nginx config file&lt;/a&gt;&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo vi /etc/nginx/nginx.conf&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt; &lt;p&gt;and add...</content>
 </entry>

 

 <entry>
   <title>Setup Nginx on Linux Server</title>
   <link href="http://localhost:4000/setup-nginx-on-linux-server"/>
   <id>http://localhost:4000/setup-nginx-on-linux-server</id>
   <updated>2017-04-30T00:00:00+03:00</updated>
   <content type="html">&lt;p&gt;Nginx is a web server, which can also be used as a reverse proxy, load balancer and HTTP cache. This blog is about how to setup nginx on Ubuntu.&lt;/p&gt; &lt;hr /&gt; &lt;h3 id=&quot;basic-setup-for-nginx&quot;&gt;Basic setup for Nginx&lt;/h3&gt; &lt;p&gt;Nginx is installed on default Linux repositories, so you can use apt-get to install...</content>
 </entry>

 

 <entry>
   <title>Prepare ports on Linux Server</title>
   <link href="http://localhost:4000/prepare-ports-on-linux-server"/>
   <id>http://localhost:4000/prepare-ports-on-linux-server</id>
   <updated>2017-04-29T00:00:00+03:00</updated>
   <content type="html">&lt;p&gt;In Linux, you have to give minimum access per operation and disable unneccessary access for users. This posts is about how ports are enabled or disabled due to security.&lt;/p&gt; &lt;hr /&gt; &lt;h3 id=&quot;ports-on-linux&quot;&gt;PORTS ON LINUX&lt;/h3&gt; &lt;p&gt;Default port numbers for common services on a server&lt;/p&gt; &lt;ol&gt; &lt;li&gt;http : 80&lt;/li&gt; &lt;li&gt;https :...</content>
 </entry>

 

 <entry>
   <title>Understanding Linux File Permissions</title>
   <link href="http://localhost:4000/understanding-linux-file-permissions"/>
   <id>http://localhost:4000/understanding-linux-file-permissions</id>
   <updated>2017-04-28T00:00:00+03:00</updated>
   <content type="html">&lt;p&gt;To make your server more securely, you should give minimum rights to each user. In this blog, we try to tell how basic file permissions works on linux server and how octal permissions calculated.&lt;/p&gt; &lt;hr /&gt; &lt;h3 id=&quot;linux-file-permissions&quot;&gt;LINUX FILE PERMISSIONS&lt;/h3&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -al total 48 drwxr-xr-x...</content>
 </entry>

 

 <entry>
   <title>Basic Linux Server Security Setup (Ubuntu 16.04 trusty)</title>
   <link href="http://localhost:4000/basic-linux-server-setup"/>
   <id>http://localhost:4000/basic-linux-server-setup</id>
   <updated>2017-04-24T00:00:00+03:00</updated>
   <content type="html">&lt;p&gt;When you first create a new Ubuntu 16.04 server, there are a few configuration steps that you should take early on as part of the basic setup. This will increase the security and usability of your server and will give you a solid foundation for subsequent actions.&lt;/p&gt; &lt;hr /&gt; &lt;h3...</content>
 </entry>

 

 <entry>
   <title>Adding Disqus to Jekyll</title>
   <link href="http://localhost:4000/add-disqus-to-jekyll"/>
   <id>http://localhost:4000/add-disqus-to-jekyll</id>
   <updated>2017-02-26T00:00:00+03:00</updated>
   <content type="html">&lt;p&gt;I was thinking to write a blog post about adding disqus to jekyll, but i found this blog post -&amp;gt; &lt;a href=&quot;http://www.perfectlyrandom.org/2014/06/29/adding-disqus-to-your-jekyll-powered-github-pages&quot;&gt;perfectly documented blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;
</content>
 </entry>

 

 <entry>
   <title>Blog with Jekyll</title>
   <link href="http://localhost:4000/blog-with-jekyll"/>
   <id>http://localhost:4000/blog-with-jekyll</id>
   <updated>2017-02-25T00:00:00+03:00</updated>
   <content type="html">&lt;p&gt;First of all, we should define what jekyll is and what it does. It is a parsing engine bundled as a ruby gem used to build static websites from dynamic components such as templates, partials, liquid code, markdown, etc. Jekyll is known as “a simple, blog aware, static site generator”.&lt;/p&gt;...</content>
 </entry>

 

 <entry>
   <title>Publish static site on github pages</title>
   <link href="http://localhost:4000/publish-static-site-on-github-pages"/>
   <id>http://localhost:4000/publish-static-site-on-github-pages</id>
   <updated>2017-02-23T00:00:00+03:00</updated>
   <content type="html">&lt;p&gt;You should add a new repo named ‘«yourgithubusername».github.io’. Then push your static site to this repo. When a request arrives, github will be looking for a file named index.html. Your index.html file will be served to your guest.&lt;/p&gt; &lt;h3 id=&quot;deploy-your-site&quot;&gt;Deploy your site&lt;/h3&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone https://github.com/&lt;span class=&quot;sh&quot;&gt;&amp;lt;&amp;lt;username&amp;gt;&amp;gt;/&amp;lt;&amp;lt;username&amp;gt;&amp;gt;.github.io $...</content>
 </entry>

 

</feed>